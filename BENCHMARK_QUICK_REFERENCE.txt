╔══════════════════════════════════════════════════════════════════════════════╗
║                   WARMSTART PERFORMANCE BENCHMARK                            ║
║                           QUICK REFERENCE CARD                               ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│ RUN ALL BENCHMARKS (RECOMMENDED)                                            │
└──────────────────────────────────────────────────────────────────────────────┘

  bash run_benchmarks.sh

  Duration: 10-30 minutes
  Output: 5 result files
  Status: Progress shown in console


┌──────────────────────────────────────────────────────────────────────────────┐
│ RUN INDIVIDUAL TESTS                                                         │
└──────────────────────────────────────────────────────────────────────────────┘

  Phase 1: Smoke Test (5s)
  ────────────────────────────────────────────────────────────────────────────
  venv/bin/python test_warmstart_smoke.py

  Phase 2: Baseline (30-300s)
  ────────────────────────────────────────────────────────────────────────────
  venv/bin/python -m pytest \
    tests/test_integration_ui_workflow.py::test_ui_workflow_4_weeks_with_initial_inventory \
    -v -s

  Phase 3: Warmstart (30-300s)
  ────────────────────────────────────────────────────────────────────────────
  venv/bin/python -m pytest \
    tests/test_integration_ui_workflow.py::test_ui_workflow_with_warmstart \
    -v -s

  Phase 4: Benchmark Script (60-600s)
  ────────────────────────────────────────────────────────────────────────────
  python scripts/benchmark_warmstart_performance.py

  Phase 5: Performance Tests (60-600s)
  ────────────────────────────────────────────────────────────────────────────
  venv/bin/python -m pytest tests/test_warmstart_performance_comparison.py -v -s


┌──────────────────────────────────────────────────────────────────────────────┐
│ OUTPUT FILES (after completion)                                             │
└──────────────────────────────────────────────────────────────────────────────┘

  baseline_test_output.txt        - Baseline test logs
  warmstart_test_output.txt       - Warmstart test logs
  benchmark_output.txt            - Benchmark console output
  benchmark_results.txt           - Formatted comparison results
  performance_test_output.txt     - Performance test logs


┌──────────────────────────────────────────────────────────────────────────────┐
│ DOCUMENTATION                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

  WARMSTART_BENCHMARK_SUMMARY.md     - Executive summary (START HERE)
  BENCHMARK_EXECUTION_GUIDE.md       - Detailed execution guide
  PERFORMANCE_REPORT.md              - Results template (update after run)


┌──────────────────────────────────────────────────────────────────────────────┐
│ SUCCESS CRITERIA                                                             │
└──────────────────────────────────────────────────────────────────────────────┘

  WARMSTART EFFECTIVE (Enable by default):
  ────────────────────────────────────────────────────────────────────────────
  ✅ Speedup ≥20%
  ✅ Solve time <120s (with warmstart)
  ✅ Objective values within 5%
  ✅ Fill rates ≥85% (both)

  WARMSTART INEFFECTIVE (Disable):
  ────────────────────────────────────────────────────────────────────────────
  ❌ Speedup <10%
  ❌ Solve time >180s
  ❌ Warmstart slower than baseline

  NEEDS INVESTIGATION:
  ────────────────────────────────────────────────────────────────────────────
  🔍 Timeout on either test (>300s)
  🔍 Solver errors/crashes
  🔍 Inconsistent results


┌──────────────────────────────────────────────────────────────────────────────┐
│ KEY METRICS TO EXTRACT                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

  From Baseline Test:
  ────────────────────────────────────────────────────────────────────────────
  • Solve time: [___]s
  • Objective: $[______]
  • Fill rate: [___]%
  • Status: [_______]

  From Warmstart Test:
  ────────────────────────────────────────────────────────────────────────────
  • Solve time: [___]s
  • Objective: $[______]
  • Fill rate: [___]%
  • Status: [_______]

  Calculate:
  ────────────────────────────────────────────────────────────────────────────
  • Speedup % = (baseline_time - warmstart_time) / baseline_time × 100
  • Time saved = baseline_time - warmstart_time
  • Obj diff % = |warmstart_obj - baseline_obj| / baseline_obj × 100


┌──────────────────────────────────────────────────────────────────────────────┐
│ TROUBLESHOOTING                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

  Smoke Test Fails:
  ────────────────────────────────────────────────────────────────────────────
  → Check src/optimization/warmstart_generator.py exists
  → Verify UnifiedNodeModel integration

  Test Times Out (>300s):
  ────────────────────────────────────────────────────────────────────────────
  → Binary variables too hard for CBC
  → Try commercial solver (Gurobi/CPLEX)
  → Reduce planning horizon (2 weeks)

  Warmstart Slower:
  ────────────────────────────────────────────────────────────────────────────
  → Hints may conflict with constraints
  → Review hint quality
  → Disable warmstart

  Benchmark Script Fails:
  ────────────────────────────────────────────────────────────────────────────
  → Check data files exist (Gfree Forecast.xlsm, Network_Config.xlsx)
  → Verify solver installed (cbc)
  → Review error in benchmark_output.txt


┌──────────────────────────────────────────────────────────────────────────────┐
│ AFTER COMPLETION                                                             │
└──────────────────────────────────────────────────────────────────────────────┘

  1. Extract metrics from output files
  2. Update PERFORMANCE_REPORT.md (replace [PENDING] placeholders)
  3. Calculate speedup percentage
  4. Make recommendation (ENABLE/DISABLE/INVESTIGATE)
  5. If effective: Update CLAUDE.md, UI, documentation


┌──────────────────────────────────────────────────────────────────────────────┐
│ EXPECTED PERFORMANCE RANGE                                                   │
└──────────────────────────────────────────────────────────────────────────────┘

  Baseline (Binary WITHOUT Warmstart):
  ────────────────────────────────────────────────────────────────────────────
  Best case:     30-60s
  Typical:       60-120s
  Worst case:    120-300s (timeout possible)

  Warmstart (Binary WITH Hints):
  ────────────────────────────────────────────────────────────────────────────
  Best case:     20-40s   (50% speedup - excellent!)
  Typical:       40-80s   (20-30% speedup - good)
  Worst case:    80-180s  (10-20% speedup - modest)


┌──────────────────────────────────────────────────────────────────────────────┐
│ WHAT GETS TESTED                                                             │
└──────────────────────────────────────────────────────────────────────────────┘

  • Binary product_produced variables (140 total: 1 node × 5 products × 28 days)
  • Campaign-based warmstart hints (2-3 SKUs per weekday)
  • 4-week planning horizon
  • Real production data (Gfree Forecast.xlsm)
  • CBC solver performance
  • Solution quality preservation


┌──────────────────────────────────────────────────────────────────────────────┐
│ CONTACT & HELP                                                               │
└──────────────────────────────────────────────────────────────────────────────┘

  For detailed guidance:     BENCHMARK_EXECUTION_GUIDE.md
  For executive summary:     WARMSTART_BENCHMARK_SUMMARY.md
  For results template:      PERFORMANCE_REPORT.md

  For debugging:
  • Review solver logs in output files
  • Check CLAUDE.md for historical performance
  • Examine test assertions for failure reasons

╔══════════════════════════════════════════════════════════════════════════════╗
║  Ready to benchmark? Run: bash run_benchmarks.sh                            ║
╚══════════════════════════════════════════════════════════════════════════════╝
