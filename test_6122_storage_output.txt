================================================================================
6122_STORAGE VIRTUAL LOCATION TEST
================================================================================

Loading data...
Filtered to 2025-10-13 - 2025-11-02: 945 forecast entries
Products: 5
Locations: 11

Initial inventory at 6122_Storage: 50,000 units across 5 products

Building optimization model with 6122_Storage...

Model built successfully:
  Planning dates: 25 days
  Routes: 9 routes
  Inventory locations: ['6103', '6104', '6105', '6110', '6120', '6122_Storage', '6123', '6125', '6130', '6134', 'Lineage']
  6122_Storage in inventory locations: True
  6122_Storage in ambient storage: True

================================================================================
SOLVING OPTIMIZATION MODEL
================================================================================
This may take 1-2 minutes...
Welcome to the CBC MILP Solver 
Version: 2.10.8 
Build Date: May  9 2022 

command line - /usr/bin/cbc -seconds 120 -ratio 0.01 -preprocess sos -passPresolve 10 -heuristics on -feaspump on -rins on -diving on -proximity on -combine on -cuts on -gomory on -knapsack on -probing on -clique on -strategy 1 -tune 2 -printingOptions all -import /tmp/tmp2sspb9fl.pyomo.lp -stat=1 -solve -solu /tmp/tmp2sspb9fl.pyomo.soln
seconds was changed from 1e+100 to 120
ratioGap was changed from 0 to 0.01
passPresolve was changed from 5 to 10
No match for feaspump - ? for list of commands
No match for on - ? for list of commands
Multiple matches for diving - possible completions:
DivingS(ome)
DivingC(oefficient)
DivingF(ractional)
DivingG(uided)
DivingL(ineSearch)
DivingP(seudoCost)
DivingV(ectorLength)
No match for on - ? for list of commands
Option for proximitySearch changed from off to on
tunePreProcess was changed from 6 to 2
Option for printingOptions changed from normal to all
Presolve 1297 (-1607) rows, 4065 (-5655) columns and 9574 (-11625) elements
Statistics for presolved model
Original problem has 300 integers (300 of which binary)
Presolved problem has 152 integers (152 of which binary)
==== 49 zero objective 55 different
==== absolute objective values 55 different
==== for integers 25 zero objective 2 different
25 variables have objective of 0
127 variables have objective of 100
==== for integers absolute objective values 2 different
25 variables have objective of 0
127 variables have objective of 100
===== end objective counts


Problem has 1297 rows, 4065 columns (4016 with objective) and 9574 elements
There are 795 singletons with objective 
Column breakdown:
3888 of type 0.0->inf, 25 of type 0.0->up, 0 of type lo->inf, 
0 of type lo->up, 0 of type free, 0 of type fixed, 
0 of type -inf->0.0, 0 of type -inf->up, 152 of type 0.0->1.0 
Row breakdown:
344 of type E 0.0, 0 of type E 1.0, 0 of type E -1.0, 
601 of type E other, 0 of type G 0.0, 0 of type G 1.0, 
0 of type G other, 310 of type L 0.0, 0 of type L 1.0, 
42 of type L other, 0 of type Range 0.0->1.0, 0 of type Range other, 
0 of type Free 
Continuous objective value is 717917 - 0.08 seconds
Cgl0002I 148 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0004I processed model has 1273 rows, 4028 columns (151 integer (151 of which binary)) and 9409 elements
Cbc0038I Initial state - 51 integers unsatisfied sum - 9.29365
Cbc0038I Pass   1: suminf.    1.88622 (10) obj. 781124 iterations 397
Cbc0038I Pass   2: suminf.    0.66623 (6) obj. 843113 iterations 14
Cbc0038I Solution found of 843566
Cbc0038I Relaxing continuous gives 718943
Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 2831 continuous
Cbc0038I Full problem 1273 rows 4028 columns, reduced to 239 rows 365 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of 718841
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.88622 (10) obj. 718841 iterations 11
Cbc0038I Pass   4: suminf.    0.66623 (6) obj. 718841 iterations 79
Cbc0038I Pass   5: suminf.    0.52720 (6) obj. 718841 iterations 221
Cbc0038I Pass   6: suminf.    0.96126 (5) obj. 718841 iterations 115
Cbc0038I Pass   7: suminf.    0.96126 (5) obj. 718841 iterations 0
Cbc0038I Pass   8: suminf.    0.55795 (3) obj. 718841 iterations 78
Cbc0038I Pass   9: suminf.    0.40869 (3) obj. 718841 iterations 4
Cbc0038I Pass  10: suminf.    0.38416 (1) obj. 718841 iterations 67
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 718841 iterations 24
Cbc0038I Solution found of 718841
Cbc0038I Relaxing continuous gives 718802
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 2710 continuous
Cbc0038I Full problem 1273 rows 4028 columns, reduced to 409 rows 635 columns
Cbc0038I Mini branch and bound improved solution from 718802 to 718539 (1.05 seconds)
Cbc0038I Round again with cutoff of 718415
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  12: suminf.    2.24510 (11) obj. 718415 iterations 51
Cbc0038I Pass  13: suminf.    1.34574 (9) obj. 718415 iterations 49
Cbc0038I Pass  14: suminf.    1.46750 (7) obj. 718415 iterations 133
Cbc0038I Pass  15: suminf.    1.36944 (6) obj. 718415 iterations 18
Cbc0038I Pass  16: suminf.    0.56383 (5) obj. 718415 iterations 144
Cbc0038I Pass  17: suminf.    0.51580 (5) obj. 718415 iterations 20
Cbc0038I Pass  18: suminf.    0.83372 (7) obj. 718415 iterations 101
Cbc0038I Pass  19: suminf.    0.83372 (7) obj. 718415 iterations 0
Cbc0038I Pass  20: suminf.    2.51809 (11) obj. 718415 iterations 150
Cbc0038I Pass  21: suminf.    1.08759 (13) obj. 718415 iterations 118
Cbc0038I Pass  22: suminf.    3.26709 (13) obj. 718415 iterations 252
Cbc0038I Pass  23: suminf.    2.26484 (9) obj. 718415 iterations 43
Cbc0038I Pass  24: suminf.    2.49566 (10) obj. 718415 iterations 170
Cbc0038I Pass  25: suminf.    2.43891 (10) obj. 718415 iterations 5
Cbc0038I Pass  26: suminf.    1.57161 (9) obj. 718415 iterations 211
Cbc0038I Pass  27: suminf.    0.53072 (3) obj. 718415 iterations 47
Cbc0038I Pass  28: suminf.    0.50174 (3) obj. 718415 iterations 24
Cbc0038I Pass  29: suminf.    1.38091 (5) obj. 718415 iterations 64
Cbc0038I Pass  30: suminf.    1.38091 (5) obj. 718415 iterations 0
Cbc0038I Pass  31: suminf.    1.21419 (5) obj. 718415 iterations 89
Cbc0038I Pass  32: suminf.    0.97108 (5) obj. 718415 iterations 9
Cbc0038I Pass  33: suminf.    1.30891 (5) obj. 718415 iterations 159
Cbc0038I Pass  34: suminf.    0.95372 (4) obj. 718415 iterations 49
Cbc0038I Pass  35: suminf.    1.08456 (5) obj. 718415 iterations 94
Cbc0038I Pass  36: suminf.    1.08456 (5) obj. 718415 iterations 0
Cbc0038I Pass  37: suminf.    1.33368 (5) obj. 718415 iterations 99
Cbc0038I Pass  38: suminf.    0.94998 (6) obj. 718415 iterations 38
Cbc0038I Pass  39: suminf.    1.42090 (7) obj. 718415 iterations 117
Cbc0038I Pass  40: suminf.    1.02817 (4) obj. 718415 iterations 43
Cbc0038I Pass  41: suminf.    1.18419 (5) obj. 718415 iterations 68
Cbc0038I Rounding solution of 718533 is better than previous of 718539

Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 2580 continuous
Cbc0038I Full problem 1273 rows 4028 columns, reduced to 571 rows 923 columns
Cbc0038I Mini branch and bound did not improve solution (2.24 seconds)
Cbc0038I Round again with cutoff of 718265
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  41: suminf.    2.31232 (13) obj. 718265 iterations 63
Cbc0038I Pass  42: suminf.    1.49113 (17) obj. 718265 iterations 94
Cbc0038I Pass  43: suminf.    3.33242 (14) obj. 718265 iterations 205
Cbc0038I Pass  44: suminf.    2.22406 (12) obj. 718265 iterations 208
Cbc0038I Pass  45: suminf.    3.20635 (13) obj. 718265 iterations 174
Cbc0038I Pass  46: suminf.    2.59705 (14) obj. 718265 iterations 54
Cbc0038I Pass  47: suminf.    3.13627 (11) obj. 718265 iterations 195
Cbc0038I Pass  48: suminf.    2.23373 (9) obj. 718265 iterations 55
Cbc0038I Pass  49: suminf.    2.75346 (11) obj. 718265 iterations 169
Cbc0038I Pass  50: suminf.    2.45744 (10) obj. 718265 iterations 55
Cbc0038I Pass  51: suminf.    2.27504 (12) obj. 718265 iterations 27
Cbc0038I Pass  52: suminf.    1.77386 (11) obj. 718265 iterations 22
Cbc0038I Pass  53: suminf.    2.70141 (12) obj. 718265 iterations 154
Cbc0038I Pass  54: suminf.    1.98654 (10) obj. 718265 iterations 65
Cbc0038I Pass  55: suminf.    1.63928 (10) obj. 718265 iterations 35
Cbc0038I Pass  56: suminf.    2.65474 (11) obj. 718265 iterations 93
Cbc0038I Pass  57: suminf.    2.45370 (11) obj. 718265 iterations 32
Cbc0038I Pass  58: suminf.    2.69952 (11) obj. 718265 iterations 156
Cbc0038I Pass  59: suminf.    2.56731 (10) obj. 718265 iterations 19
Cbc0038I Pass  60: suminf.    2.88405 (9) obj. 718265 iterations 114
Cbc0038I Pass  61: suminf.    2.26565 (8) obj. 718265 iterations 55
Cbc0038I Pass  62: suminf.    1.82573 (6) obj. 718265 iterations 49
Cbc0038I Pass  63: suminf.    1.99905 (9) obj. 718265 iterations 65
Cbc0038I Pass  64: suminf.    1.35166 (9) obj. 718265 iterations 30
Cbc0038I Pass  65: suminf.    1.30500 (7) obj. 718265 iterations 15
Cbc0038I Pass  66: suminf.    2.38146 (14) obj. 718265 iterations 164
Cbc0038I Pass  67: suminf.    1.53348 (12) obj. 718265 iterations 51
Cbc0038I Pass  68: suminf.    3.33804 (14) obj. 718265 iterations 152
Cbc0038I Pass  69: suminf.    2.21385 (13) obj. 718265 iterations 74
Cbc0038I Pass  70: suminf.    2.87971 (11) obj. 718265 iterations 154
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 2568 continuous
Cbc0038I Full problem 1273 rows 4028 columns, reduced to 578 rows 944 columns
Cbc0038I Mini branch and bound did not improve solution (3.40 seconds)
Cbc0038I After 3.40 seconds - Feasibility pump exiting with objective of 718533 - took 3.26 seconds
Cbc0012I Integer solution of 718532.94 found by feasibility pump after 0 iterations and 0 nodes (3.43 seconds)
Cbc0011I Exiting as integer gap of 616.37058 less than 1e-10 or 1%
Cbc0001I Search completed - best objective 718532.9383482496, took 0 iterations and 0 nodes (3.44 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 717917 to 717917
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found (within gap tolerance)

Objective value:                718532.93834825
Lower bound:                    717916.568
Gap:                            0.00
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             3.71
Time (Wallclock seconds):       3.82

Total time (CPU seconds):       3.78   (Wallclock seconds):       3.90


================================================================================
RESULTS ANALYSIS
================================================================================

Solver Status: optimal
Success: True
Objective Value: $718,532.94
Solve Time: 4.21s

--------------------------------------------------------------------------------
WEEKEND PRODUCTION CHECK
--------------------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/sverzijl/planning_latest/test_6122_storage.py", line 115, in <module>
    total_prod = sum(result.production.get((prod_date, p), 0) for p in product_ids)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sverzijl/planning_latest/test_6122_storage.py", line 115, in <genexpr>
    total_prod = sum(result.production.get((prod_date, p), 0) for p in product_ids)
                     ^^^^^^^^^^^^^^^^^
AttributeError: 'OptimizationResult' object has no attribute 'production'
