======================================================================
MONOLITHIC SOLVE: Full 29-week horizon (203 days)
======================================================================

Loading data...

Planning horizon: 2025-06-02 to 2025-12-22 (204 days)
Forecast entries: 9180

Building optimization model...
Model built in 0.09s

Solving with CBC (aggressive heuristics enabled)...
Time limit: 600 seconds (10 minutes)
MIP gap: 1%
Welcome to the CBC MILP Solver 
Version: 2.10.8 
Build Date: May  9 2022 

command line - /usr/bin/cbc -seconds 600 -ratio 0.01 -preprocess sos -passPresolve 10 -heuristics on -feaspump on -rins on -diving on -proximity on -combine on -cuts on -gomory on -knapsack on -probing on -clique on -strategy 1 -tune 2 -printingOptions all -import /tmp/tmpxy1kjpvh.pyomo.lp -stat=1 -solve -solu /tmp/tmpxy1kjpvh.pyomo.soln
seconds was changed from 1e+100 to 600
ratioGap was changed from 0 to 0.01
passPresolve was changed from 5 to 10
No match for feaspump - ? for list of commands
No match for on - ? for list of commands
Multiple matches for diving - possible completions:
DivingS(ome)
DivingC(oefficient)
DivingF(ractional)
DivingG(uided)
DivingL(ineSearch)
DivingP(seudoCost)
DivingV(ectorLength)
No match for on - ? for list of commands
Option for proximitySearch changed from off to on
tunePreProcess was changed from 6 to 2
Option for printingOptions changed from normal to all
Presolve 10918 (-9967) rows, 25959 (-52069) columns and 64496 (-70656) elements
Statistics for presolved model
Original problem has 2496 integers (2496 of which binary)
Presolved problem has 1186 integers (1186 of which binary)
==== 207 zero objective 68 different
==== absolute objective values 68 different
==== for integers 0 zero objective 2 different
1041 variables have objective of 100
145 variables have objective of 300
==== for integers absolute objective values 2 different
1041 variables have objective of 100
145 variables have objective of 300
===== end objective counts


Problem has 10918 rows, 25959 columns (25752 with objective) and 64496 elements
There are 7979 singletons with objective 
Column breakdown:
24500 of type 0.0->inf, 208 of type 0.0->up, 65 of type lo->inf, 
0 of type lo->up, 0 of type free, 0 of type fixed, 
0 of type -inf->0.0, 0 of type -inf->up, 1186 of type 0.0->1.0 
Row breakdown:
1602 of type E 0.0, 0 of type E 1.0, 0 of type E -1.0, 
5622 of type E other, 0 of type G 0.0, 0 of type G 1.0, 
0 of type G other, 2901 of type L 0.0, 0 of type L 1.0, 
793 of type L other, 0 of type Range 0.0->1.0, 0 of type Range other, 
0 of type Free 
Continuous objective value is 1.32897e+07 - 1.95 seconds
Cgl0002I 1247 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 288 strengthened rows, 0 substitutions
Cgl0004I processed model has 10767 rows, 24907 columns (1179 integer (1179 of which binary)) and 61982 elements
Cbc0038I Initial state - 777 integers unsatisfied sum - 144.83
Cbc0038I Pass   1: (2.85 seconds) suminf.   44.59886 (245) obj. 1.43346e+07 iterations 2303
Cbc0038I Pass   2: (3.47 seconds) suminf.    9.68973 (36) obj. 1.47117e+07 iterations 2283
Cbc0038I Pass   3: (3.71 seconds) suminf.    3.84257 (17) obj. 1.47485e+07 iterations 505
Cbc0038I Pass   4: (3.76 seconds) suminf.    2.89689 (14) obj. 1.47448e+07 iterations 67
Cbc0038I Solution found of 1.47464e+07
Cbc0038I Relaxing continuous gives 1.33397e+07
Cbc0038I Before mini branch and bound, 340 integers at bound fixed and 12857 continuous
Cbc0038I Full problem 10767 rows 24907 columns, reduced to 4723 rows 6445 columns
Cbc0038I Mini branch and bound improved solution from 1.33397e+07 to 1.33172e+07 (17.77 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.33155e+07
Cbc0038I Round again with cutoff of 1.33134e+07
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   5: (19.15 seconds) suminf.   35.66769 (153) obj. 1.33134e+07 iterations 1974
Cbc0038I Pass   6: (20.41 seconds) suminf.   16.63842 (104) obj. 1.33134e+07 iterations 1975
Cbc0038I Pass   7: (20.74 seconds) suminf.   13.26970 (89) obj. 1.33134e+07 iterations 514
Cbc0038I Pass   8: (20.81 seconds) suminf.   12.53720 (87) obj. 1.33134e+07 iterations 44
Cbc0038I Pass   9: (21.45 seconds) suminf.    5.17184 (48) obj. 1.33134e+07 iterations 1184
Cbc0038I Pass  10: (22.10 seconds) suminf.    0.75159 (16) obj. 1.33134e+07 iterations 1195
Cbc0038I Pass  11: (22.55 seconds) suminf.    0.25754 (8) obj. 1.33134e+07 iterations 839
Cbc0038I Pass  12: (22.77 seconds) suminf.    0.49848 (5) obj. 1.33134e+07 iterations 382
Cbc0038I Pass  13: (23.00 seconds) suminf.    0.00000 (0) obj. 1.33134e+07 iterations 609
Cbc0038I Solution found of 1.33134e+07
Cbc0038I Relaxing continuous gives 1.33133e+07
Cbc0038I Before mini branch and bound, 341 integers at bound fixed and 12355 continuous
Cbc0038I Full problem 10767 rows 24907 columns, reduced to 5333 rows 7406 columns
Cbc0038I Mini branch and bound did not improve solution (37.78 seconds)
Cbc0038I Round again with cutoff of 1.33095e+07
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 3
Cbc0038I Pass  14: (39.12 seconds) suminf.   39.76016 (160) obj. 1.33095e+07 iterations 2047
Cbc0038I Pass  15: (40.17 seconds) suminf.   21.80860 (122) obj. 1.33095e+07 iterations 1683
Cbc0038I Pass  16: (40.39 seconds) suminf.   19.29827 (113) obj. 1.33095e+07 iterations 300
Cbc0038I Pass  17: (40.85 seconds) suminf.   11.43467 (85) obj. 1.33095e+07 iterations 814
Cbc0038I Pass  18: (41.18 seconds) suminf.    8.51513 (85) obj. 1.33095e+07 iterations 640
Cbc0038I Pass  19: (41.62 seconds) suminf.    6.49709 (57) obj. 1.33095e+07 iterations 713
Cbc0038I Pass  20: (41.69 seconds) suminf.    6.05663 (62) obj. 1.33095e+07 iterations 60
Cbc0038I Pass  21: (42.02 seconds) suminf.    6.68434 (50) obj. 1.33095e+07 iterations 658
Cbc0038I Pass  22: (42.28 seconds) suminf.    5.66310 (49) obj. 1.33095e+07 iterations 487
Cbc0038I Pass  23: (42.36 seconds) suminf.    5.27253 (50) obj. 1.33095e+07 iterations 44
Cbc0038I Pass  24: (43.09 seconds) suminf.    7.83635 (59) obj. 1.33095e+07 iterations 1274
Cbc0038I Pass  25: (43.20 seconds) suminf.    7.46421 (57) obj. 1.33095e+07 iterations 89
Cbc0038I Pass  26: (43.63 seconds) suminf.    5.78493 (48) obj. 1.33095e+07 iterations 710
Cbc0038I Pass  27: (44.03 seconds) suminf.    8.65889 (60) obj. 1.33095e+07 iterations 695
Cbc0038I Pass  28: (44.23 seconds) suminf.    6.23885 (53) obj. 1.33095e+07 iterations 294
Cbc0038I Pass  29: (44.50 seconds) suminf.    6.13632 (50) obj. 1.33095e+07 iterations 476
Cbc0038I Pass  30: (44.97 seconds) suminf.    7.72844 (50) obj. 1.33095e+07 iterations 865
Cbc0038I Pass  31: (45.03 seconds) suminf.    6.75746 (49) obj. 1.33095e+07 iterations 53
Cbc0038I Pass  32: (45.61 seconds) suminf.    7.60448 (50) obj. 1.33095e+07 iterations 1089
Cbc0038I Pass  33: (45.72 seconds) suminf.    7.00360 (53) obj. 1.33095e+07 iterations 114
Cbc0038I Pass  34: (46.34 seconds) suminf.   10.56519 (51) obj. 1.33095e+07 iterations 1062
Cbc0038I Pass  35: (46.44 seconds) suminf.    9.07951 (51) obj. 1.33095e+07 iterations 118
Cbc0038I Pass  36: (47.02 seconds) suminf.    8.68804 (51) obj. 1.33095e+07 iterations 938
Cbc0038I Pass  37: (47.19 seconds) suminf.    8.02030 (52) obj. 1.33095e+07 iterations 156
Cbc0038I Pass  38: (47.55 seconds) suminf.    8.29495 (59) obj. 1.33095e+07 iterations 553
Cbc0038I Pass  39: (47.65 seconds) suminf.    7.59332 (59) obj. 1.33095e+07 iterations 79
Cbc0038I Pass  40: (48.07 seconds) suminf.    8.21870 (55) obj. 1.33095e+07 iterations 617
Cbc0038I Pass  41: (48.16 seconds) suminf.    8.17967 (55) obj. 1.33095e+07 iterations 81
Cbc0038I Pass  42: (48.48 seconds) suminf.    8.17164 (59) obj. 1.33095e+07 iterations 485
Cbc0038I Pass  43: (48.62 seconds) suminf.    6.99304 (53) obj. 1.33095e+07 iterations 158
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 313 integers at bound fixed and 11559 continuous
Cbc0038I Full problem 10767 rows 24907 columns, reduced to 6287 rows 9106 columns
Cbc0038I Mini branch and bound did not improve solution (71.54 seconds)
Cbc0038I After 71.54 seconds - Feasibility pump exiting with objective of 1.33133e+07 - took 68.91 seconds
Cbc0012I Integer solution of 13313187 found by feasibility pump after 0 iterations and 0 nodes (72.42 seconds)
Cbc0011I Exiting as integer gap of 18658.316 less than 1e-10 or 1%
Cbc0001I Search completed - best objective 13313187.36374751, took 0 iterations and 0 nodes (72.44 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.32945e+07 to 1.32945e+07
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found (within gap tolerance)

Objective value:                13313187.36374747
Lower bound:                    13294529.048
Gap:                            0.00
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             76.87
Time (Wallclock seconds):       77.43

Total time (CPU seconds):       77.44   (Wallclock seconds):       78.11


======================================================================
SOLVE COMPLETE
======================================================================

Solver status: optimal
Feasible: True
Optimal: True
Solve time: 84.24s
Objective value: $13,313,187.37

Extracting solution...

======================================================================
SOLUTION SUMMARY
======================================================================
Traceback (most recent call last):
  File "/home/sverzijl/planning_latest/test_full_29weeks_monolithic.py", line 95, in <module>
    total_production = sum(
                       ^^^^
  File "/home/sverzijl/planning_latest/test_full_29weeks_monolithic.py", line 96, in <genexpr>
    sum(products.values())
        ^^^^^^^^^^^^^^^
AttributeError: 'float' object has no attribute 'values'
