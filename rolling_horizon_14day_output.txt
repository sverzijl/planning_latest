======================================================================
ROLLING HORIZON - 14-DAY WINDOWS (2 WEEKS)
======================================================================

Loading data...

Full Dataset:
  Total demand: 2,407,299 units
  Date range: 2025-06-02 to 2025-12-22 (204 days)

======================================================================
CONFIGURATION
======================================================================

Rolling Horizon:
  Window size: 14 days (2 weeks)
  Overlap: 7 days (1 week)
  Committed: 7 days per window
  Expected windows: ~29
  Expected time: 2-10s per window (longer than 7-day)

======================================================================
SOLVING
======================================================================
======================================================================
ROLLING HORIZON SOLVER
======================================================================

Planning horizon: 2025-06-02 to 2025-12-22 (204 days)
Window size: 14 days
Overlap: 7 days
Temporal aggregation: No

Creating windows...
  Created 30 windows
    1. Window[window_1]: 2025-06-02 to 2025-06-15 (14d (overlap: 7d))
    2. Window[window_2]: 2025-06-09 to 2025-06-22 (14d (overlap: 7d))
    3. Window[window_3]: 2025-06-16 to 2025-06-29 (14d (overlap: 7d))
    4. Window[window_4]: 2025-06-23 to 2025-07-06 (14d (overlap: 7d))
    5. Window[window_5]: 2025-06-30 to 2025-07-13 (14d (overlap: 7d))
    6. Window[window_6]: 2025-07-07 to 2025-07-20 (14d (overlap: 7d))
    7. Window[window_7]: 2025-07-14 to 2025-07-27 (14d (overlap: 7d))
    8. Window[window_8]: 2025-07-21 to 2025-08-03 (14d (overlap: 7d))
    9. Window[window_9]: 2025-07-28 to 2025-08-10 (14d (overlap: 7d))
    10. Window[window_10]: 2025-08-04 to 2025-08-17 (14d (overlap: 7d))
    11. Window[window_11]: 2025-08-11 to 2025-08-24 (14d (overlap: 7d))
    12. Window[window_12]: 2025-08-18 to 2025-08-31 (14d (overlap: 7d))
    13. Window[window_13]: 2025-08-25 to 2025-09-07 (14d (overlap: 7d))
    14. Window[window_14]: 2025-09-01 to 2025-09-14 (14d (overlap: 7d))
    15. Window[window_15]: 2025-09-08 to 2025-09-21 (14d (overlap: 7d))
    16. Window[window_16]: 2025-09-15 to 2025-09-28 (14d (overlap: 7d))
    17. Window[window_17]: 2025-09-22 to 2025-10-05 (14d (overlap: 7d))
    18. Window[window_18]: 2025-09-29 to 2025-10-12 (14d (overlap: 7d))
    19. Window[window_19]: 2025-10-06 to 2025-10-19 (14d (overlap: 7d))
    20. Window[window_20]: 2025-10-13 to 2025-10-26 (14d (overlap: 7d))
    21. Window[window_21]: 2025-10-20 to 2025-11-02 (14d (overlap: 7d))
    22. Window[window_22]: 2025-10-27 to 2025-11-09 (14d (overlap: 7d))
    23. Window[window_23]: 2025-11-03 to 2025-11-16 (14d (overlap: 7d))
    24. Window[window_24]: 2025-11-10 to 2025-11-23 (14d (overlap: 7d))
    25. Window[window_25]: 2025-11-17 to 2025-11-30 (14d (overlap: 7d))
    26. Window[window_26]: 2025-11-24 to 2025-12-07 (14d (overlap: 7d))
    27. Window[window_27]: 2025-12-01 to 2025-12-14 (14d (overlap: 7d))
    28. Window[window_28]: 2025-12-08 to 2025-12-21 (14d (overlap: 7d))
    29. Window[window_29]: 2025-12-15 to 2025-12-22 (8d)
    30. Window[window_30]: 2025-12-22 to 2025-12-22 (1d)

======================================================================
SOLVING WINDOW 1/30: window_1
======================================================================
  Dates: 2025-06-02 to 2025-06-15 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_1 solved: OPTIMAL
     Cost: $483,385.13
     Time: 2.49s
     → Inventory passed to Window window_2

======================================================================
SOLVING WINDOW 2/30: window_2
======================================================================
  Dates: 2025-06-09 to 2025-06-22 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_2 solved: OPTIMAL
     Cost: $482,063.16
     Time: 3.15s
     → Inventory passed to Window window_3

======================================================================
SOLVING WINDOW 3/30: window_3
======================================================================
  Dates: 2025-06-16 to 2025-06-29 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_3 solved: OPTIMAL
     Cost: $482,569.65
     Time: 3.15s
     → Inventory passed to Window window_4

======================================================================
SOLVING WINDOW 4/30: window_4
======================================================================
  Dates: 2025-06-23 to 2025-07-06 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_4 solved: OPTIMAL
     Cost: $486,070.94
     Time: 3.31s
     → Inventory passed to Window window_5

======================================================================
SOLVING WINDOW 5/30: window_5
======================================================================
  Dates: 2025-06-30 to 2025-07-13 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_5 solved: OPTIMAL
     Cost: $498,714.79
     Time: 3.07s
     → Inventory passed to Window window_6

======================================================================
SOLVING WINDOW 6/30: window_6
======================================================================
  Dates: 2025-07-07 to 2025-07-20 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_6 solved: OPTIMAL
     Cost: $499,007.17
     Time: 4.70s
     → Inventory passed to Window window_7

======================================================================
SOLVING WINDOW 7/30: window_7
======================================================================
  Dates: 2025-07-14 to 2025-07-27 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_7 solved: OPTIMAL
     Cost: $499,018.28
     Time: 2.75s
     → Inventory passed to Window window_8

======================================================================
SOLVING WINDOW 8/30: window_8
======================================================================
  Dates: 2025-07-21 to 2025-08-03 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_8 solved: OPTIMAL
     Cost: $495,157.55
     Time: 3.99s
     → Inventory passed to Window window_9

======================================================================
SOLVING WINDOW 9/30: window_9
======================================================================
  Dates: 2025-07-28 to 2025-08-10 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_9 solved: OPTIMAL
     Cost: $476,382.71
     Time: 2.82s
     → Inventory passed to Window window_10

======================================================================
SOLVING WINDOW 10/30: window_10
======================================================================
  Dates: 2025-08-04 to 2025-08-17 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_10 solved: OPTIMAL
     Cost: $485,466.41
     Time: 7.27s
     → Inventory passed to Window window_11

======================================================================
SOLVING WINDOW 11/30: window_11
======================================================================
  Dates: 2025-08-11 to 2025-08-24 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_11 solved: OPTIMAL
     Cost: $489,158.53
     Time: 2.50s
     → Inventory passed to Window window_12

======================================================================
SOLVING WINDOW 12/30: window_12
======================================================================
  Dates: 2025-08-18 to 2025-08-31 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_12 solved: OPTIMAL
     Cost: $480,163.84
     Time: 3.64s
     → Inventory passed to Window window_13

======================================================================
SOLVING WINDOW 13/30: window_13
======================================================================
  Dates: 2025-08-25 to 2025-09-07 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_13 solved: OPTIMAL
     Cost: $471,268.95
     Time: 3.28s
     → Inventory passed to Window window_14

======================================================================
SOLVING WINDOW 14/30: window_14
======================================================================
  Dates: 2025-09-01 to 2025-09-14 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_14 solved: OPTIMAL
     Cost: $464,423.93
     Time: 3.42s
     → Inventory passed to Window window_15

======================================================================
SOLVING WINDOW 15/30: window_15
======================================================================
  Dates: 2025-09-08 to 2025-09-21 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_15 solved: OPTIMAL
     Cost: $482,368.92
     Time: 4.76s
     → Inventory passed to Window window_16

======================================================================
SOLVING WINDOW 16/30: window_16
======================================================================
  Dates: 2025-09-15 to 2025-09-28 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_16 solved: OPTIMAL
     Cost: $487,161.32
     Time: 3.90s
     → Inventory passed to Window window_17

======================================================================
SOLVING WINDOW 17/30: window_17
======================================================================
  Dates: 2025-09-22 to 2025-10-05 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_17 solved: OPTIMAL
     Cost: $463,205.86
     Time: 2.55s
     → Inventory passed to Window window_18

======================================================================
SOLVING WINDOW 18/30: window_18
======================================================================
  Dates: 2025-09-29 to 2025-10-12 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_18 solved: OPTIMAL
     Cost: $463,648.05
     Time: 4.42s
     → Inventory passed to Window window_19

======================================================================
SOLVING WINDOW 19/30: window_19
======================================================================
  Dates: 2025-10-06 to 2025-10-19 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_19 solved: OPTIMAL
     Cost: $470,728.09
     Time: 4.27s
     → Inventory passed to Window window_20

======================================================================
SOLVING WINDOW 20/30: window_20
======================================================================
  Dates: 2025-10-13 to 2025-10-26 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_20 solved: OPTIMAL
     Cost: $476,898.00
     Time: 4.62s
     → Inventory passed to Window window_21

======================================================================
SOLVING WINDOW 21/30: window_21
======================================================================
  Dates: 2025-10-20 to 2025-11-02 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_21 solved: OPTIMAL
     Cost: $473,619.58
     Time: 3.93s
     → Inventory passed to Window window_22

======================================================================
SOLVING WINDOW 22/30: window_22
======================================================================
  Dates: 2025-10-27 to 2025-11-09 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_22 solved: OPTIMAL
     Cost: $463,244.00
     Time: 4.15s
     → Inventory passed to Window window_23

======================================================================
SOLVING WINDOW 23/30: window_23
======================================================================
  Dates: 2025-11-03 to 2025-11-16 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_23 solved: OPTIMAL
     Cost: $457,541.83
     Time: 4.14s
     → Inventory passed to Window window_24

======================================================================
SOLVING WINDOW 24/30: window_24
======================================================================
  Dates: 2025-11-10 to 2025-11-23 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_24 solved: OPTIMAL
     Cost: $457,083.14
     Time: 5.55s
     → Inventory passed to Window window_25

======================================================================
SOLVING WINDOW 25/30: window_25
======================================================================
  Dates: 2025-11-17 to 2025-11-30 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_25 solved: OPTIMAL
     Cost: $462,891.93
     Time: 4.16s
     → Inventory passed to Window window_26

======================================================================
SOLVING WINDOW 26/30: window_26
======================================================================
  Dates: 2025-11-24 to 2025-12-07 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_26 solved: OPTIMAL
     Cost: $463,335.66
     Time: 6.80s
     → Inventory passed to Window window_27

======================================================================
SOLVING WINDOW 27/30: window_27
======================================================================
  Dates: 2025-12-01 to 2025-12-14 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_27 solved: OPTIMAL
     Cost: $467,970.79
     Time: 4.91s
     → Inventory passed to Window window_28

======================================================================
SOLVING WINDOW 28/30: window_28
======================================================================
  Dates: 2025-12-08 to 2025-12-21 (14 days)
  Demand entries: 630
  Building optimization model...
  Solving with cbc...

  ✅ Window window_28 solved: OPTIMAL
     Cost: $475,310.44
     Time: 4.05s
     → Inventory passed to Window window_29

======================================================================
SOLVING WINDOW 29/30: window_29
======================================================================
  Dates: 2025-12-15 to 2025-12-22 (8 days)
  Demand entries: 360
  Building optimization model...
  Solving with cbc...

  ✅ Window window_29 solved: OPTIMAL
     Cost: $209,125.77
     Time: 1.64s
     → Inventory passed to Window window_30

======================================================================
SOLVING WINDOW 30/30: window_30
======================================================================
  Dates: 2025-12-22 to 2025-12-22 (1 days)
  Demand entries: 45
  Building optimization model...
  Solving with cbc...

  ✅ Window window_30 solved: OPTIMAL
     Cost: $8,466.42
     Time: 0.31s

======================================================================
STITCHING SOLUTIONS
======================================================================
  window_1: Using 7 committed days (2025-06-02 to 2025-06-08)
  window_2: Using 7 committed days (2025-06-09 to 2025-06-15)
  window_3: Using 7 committed days (2025-06-16 to 2025-06-22)
  window_4: Using 7 committed days (2025-06-23 to 2025-06-29)
  window_5: Using 7 committed days (2025-06-30 to 2025-07-06)
  window_6: Using 7 committed days (2025-07-07 to 2025-07-13)
  window_7: Using 7 committed days (2025-07-14 to 2025-07-20)
  window_8: Using 7 committed days (2025-07-21 to 2025-07-27)
  window_9: Using 7 committed days (2025-07-28 to 2025-08-03)
  window_10: Using 7 committed days (2025-08-04 to 2025-08-10)
  window_11: Using 7 committed days (2025-08-11 to 2025-08-17)
  window_12: Using 7 committed days (2025-08-18 to 2025-08-24)
  window_13: Using 7 committed days (2025-08-25 to 2025-08-31)
  window_14: Using 7 committed days (2025-09-01 to 2025-09-07)
  window_15: Using 7 committed days (2025-09-08 to 2025-09-14)
  window_16: Using 7 committed days (2025-09-15 to 2025-09-21)
  window_17: Using 7 committed days (2025-09-22 to 2025-09-28)
  window_18: Using 7 committed days (2025-09-29 to 2025-10-05)
  window_19: Using 7 committed days (2025-10-06 to 2025-10-12)
  window_20: Using 7 committed days (2025-10-13 to 2025-10-19)
  window_21: Using 7 committed days (2025-10-20 to 2025-10-26)
  window_22: Using 7 committed days (2025-10-27 to 2025-11-02)
  window_23: Using 7 committed days (2025-11-03 to 2025-11-09)
  window_24: Using 7 committed days (2025-11-10 to 2025-11-16)
  window_25: Using 7 committed days (2025-11-17 to 2025-11-23)
  window_26: Using 7 committed days (2025-11-24 to 2025-11-30)
  window_27: Using 7 committed days (2025-12-01 to 2025-12-07)
  window_28: Using 7 committed days (2025-12-08 to 2025-12-14)
  window_29: Using 8 committed days (2025-12-15 to 2025-12-22)
  window_30: Using 1 committed days (2025-12-22 to 2025-12-22)

======================================================================
ROLLING HORIZON COMPLETE
======================================================================

RollingHorizonResult: ALL FEASIBLE, 30 windows, cost=$6,896,521.52, time=113.69s (3.79s/window)

======================================================================
RESULTS
======================================================================

Status: ✅ FEASIBLE
Windows: 30
Feasible: 30
Infeasible: 0
Total time: 113.92s
Avg time per window: 3.80s
Total cost: $6,896,521.52

======================================================================
COMPARISON TO 7-DAY WINDOWS
======================================================================

7-day windows (baseline):
  - Windows: 51
  - Feasible: 30 (59%)
  - Infeasible: 21 (41%)
  - Avg time: 0.75s/window
  - Total time: ~38s

14-day windows (this test):
  - Windows: 30
  - Feasible: 30 (100%)
  - Infeasible: 0 (0%)
  - Avg time: 3.80s/window
  - Total time: 114s

✅ IMPROVEMENT: 21 fewer infeasible windows with 2-week lookahead!

======================================================================
